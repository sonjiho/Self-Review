else
return("규격의 연산자만 전달하세요")
}
exam4 <- function(x, y=c("+", "-", "*", "%/%", "%%"), z)
n1 <- x
n2 <- z
for (i in y) {
if (x == 0)
return("오류1")
else (z == 0)
return("오류2")
else {
return("규격의 연산자만 전달하세요")
}
}
exam4 <- function(x, y=c("+", "-", "*", "%/%", "%%"), z)
n1 <- x
n2 <- z
for (i in y) {
if (x == 0)
return("오류1")
else (z == 0)
return("오류2")
else:
return("규격의 연산자만 전달하세요")
}
exam4 <- function(x, y=c("+", "-", "*", "%/%", "%%"), z)
n1 <- x
n2 <- z
for (i in y) {
if (x == 0)
return("오류1")
else (z == 0)
return("오류2")
}
else
return("규격의 연산자만 전달하세요")
}
exam4 <- function(x, y=c("+", "-", "*", "%/%", "%%"), z)
n1 <- x
n2 <- z
for (i in y) {
if (x == 0)
return("오류1")
else (z == 0)
return("오류2")
}
else
return("규격의 연산자만 전달하세요")
exam4 <- function(x, y=c("+", "-", "*", "%/%", "%%"), z)
n1 <- x
n2 <- z
for (i in y) {
if (x == 0)
return("오류1")
else (z == 0)
return("오류2")
else
return("규격의 연산자만 전달하세요")
}
exam5 <- function(x, ...)
x <- a
data = c(...)
if data == NA {
return("#" * x)
else data == c(...)
return(data * x)
else x < 0
return(NULL)
}
exam5 <- function(x, ...)
x <- a
data = c(...)
if data == c(NA) {
return("#" * x)
else data == c(...)
return(data * x)
else x < 0
return(NULL)
}
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) | (x < 100)
return("상")
elif (70 <= x) | (x <= 84)
return("중")
else (x <= 69)
return("하")
else (NA in x) {
return("NA는 처리불가")
cat(x, "점은" return, "등급 입니다.")
}
}
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
return("상")
elif (70 <= x) | (x <= 84)
return("중")
else (x <= 69)
return("하")
else (NA in x) {
return("NA는 처리불가")
cat(x, "점은" return, "등급 입니다.")
}
}
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
cat("상")
elif (70 <= x) | (x <= 84)
cat("중")
else (x <= 69)
cat("하")
else (NA in x) {
cat("NA는 처리불가")
cat(x, "점은" return, "등급 입니다.")
}
}
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
cat("상")
elif (70 <= x) | (x <= 84)
cat("중")
else (x <= 69)
cat("하")
else (NA in x)
cat("NA는 처리불가")
}
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
cat("상")
elif (70 <= x) | (x <= 84)
cat("중")
else (x <= 69)
cat("하")
else (NA in x) {
cat("NA는 처리불가")
}
}
cat(x, "점은" return, "등급 입니다.")
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
cat("상", "\n")
elif (70 <= x) | (x <= 84)
cat("중", "\n")
else (x <= 69)
cat("하", "\n")
else (NA in x) {
cat("NA는 처리불가", "\n")
}
}
cat(x, "점은" return, "등급 입니다.")
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
cat("상", "\n")
elif (70 <= x) | (x <= 84)
cat("중", "\n")
elif (x <= 69)
cat("하", "\n")
else (NA in x) {
cat("NA는 처리불가", "\n")
}
}
cat(x, "점은" return, "등급 입니다.")
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
cat("상", "\n")
elif (70 <= x) | (x <= 84)
cat("중", "\n")
elif (x <= 69)
cat("하", "\n")
else (NA in x) {
cat("NA는 처리불가", "\n")
cat(x, "점은" return, "등급 입니다.")
}
}
exam4 <- function(x, operator, y)
result <- switch (EXPR = operator,
"+" = x + y,
"-" = x - y,
"*" = x * y,
"%/%" = ifelse(x == 0, "오류1",
ifelse(y == 0, "오류2",
x %/% z)),
"%%" = ifelse(x == 0, "오류1",
ifelse(z == 0, "오류2",
x %% z)),
"규격의 연산자만 전달하세요."
)
retrun(result)
)
exam4 <- function(x, operator, y)
result <- switch (EXPR = operator,
"+" = x + y,
"-" = x - y,
"*" = x * y,
"%/%" = ifelse(x == 0, "오류1",
ifelse(y == 0, "오류2",
x %/% z)),
"%%" = ifelse(x == 0, "오류1",
ifelse(z == 0, "오류2",
x %% z)),
"규격의 연산자만 전달하세요."
)
retrun(result)
}
exam4 <- function(x, operator, y) {
result <- switch (EXPR = operator,
"+" = x + y,
"-" = x - y,
"*" = x * y,
"%/%" = ifelse(x == 0, "오류1",
ifelse(y == 0, "오류2",
x %/% z)),
"%%" = ifelse(x == 0, "오류1",
ifelse(z == 0, "오류2",
x %% z)),
"규격의 연산자만 전달하세요."
)
retrun(result)
}
exam4(20, "+", 6)
exam4(20, "^", 6)
exam4(0, "%%", 6)
exam4(20, "%/%", 0)
exam4(20, "%%", 6)
exam4 <- function(x, operator, y) {
result <- switch (EXPR = operator,
"+" = x + y,
"-" = x - y,
"*" = x * y,
"%/%" = ifelse(x == 0, "오류1",
ifelse(y == 0, "오류2",
x %/% y)),
"%%" = ifelse(x == 0, "오류1",
ifelse(y == 0, "오류2",
x %% y)),
"규격의 연산자만 전달하세요."
)
retrun(result)
}
exam4(20, "+", 6)
exam4(20, "^", 6)
exam4(0, "%%", 6)
exam4(20, "%/%", 0)
exam4(20, "%%", 6)
exam4 <- function(x, operator, y) {
result <- switch (EXPR = operator,
"+" = x + y,
"-" = x - y,
"*" = x * y,
"%/%" = ifelse(x == 0, "오류1",
ifelse(y == 0, "오류2",
x %/% y)),
"%%" = ifelse(x == 0, "오류1",
ifelse(y == 0, "오류2",
x %% y)),
"규격의 연산자만 전달하세요."
)
return(result)
}
exam4(20, "+", 6)
exam4(20, "^", 6)
exam4(0, "%%", 6)
exam4(20, "%/%", 0)
exam4(20, "%%", 6)
exam5 <- function(x, p="#") {
if (x >= 0) {
cat(paste0(rep(p, x)), sep = "", "\n")
}
return(NULL)
}
exam5(4)
exam5(-4)
exam5(7, "&")
exam6 <- function(scores) {
for (score in scores) {
if (is.na(score)){
cat("NA는 처리불가\n")
}else {
grade <- ifelse(score>=85, "상",
ifelse(score>=70, "중", "하"))
cat(score,"점은", grade, "등급니다.\n")
}
}
}
exam6(100, 85, 84, NA, 70, 69)
exam6(c(100, 85, 84, NA, 70, 69))
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
cat("상", "\n")
elif (70 <= x) | (x <= 84)
cat("중", "\n")
elif (x <= 69)
cat("하", "\n")
else (is.na(x)) {
cat("NA는 처리불가", "\n")
cat(x, "점은" return, "등급 입니다.")
}
}
exam6 <- function(x)
x <- sample(0:100, 1)
for (i in x) {
if (85 <= x) (x < 100)
cat("상", "\n")
elif (70 <= x) | (x <= 84)
cat("중", "\n")
elif (x <= 69)
cat("하", "\n")
else (is.na(x)) {
cat("NA는 처리불가", "\n")
cat(x, "점은" return, "등급 입니다.")
}
}
v1 <- 1:10
v2 <- 2 * v1
max_v <- max(v2)
min_v <- min(v2)
avg_v <- mean(v2)
sum_v <- sum(v2)
v3 <- v2[-5]
v1; v2; max_v; min_v; avg_v; sum_v; v3
v4 <- seq(1:10, 2)
v5 <- rep(1, 5)
v6 <- rep(1:3, 3)
v7 <- rep(1:4, each=2)
v4; v5; v6; v7
v4 <- seq(1, 10, 2)
v5 <- rep(1, 5)
v6 <- rep(1:3, 3)
v7 <- rep(1:4, each=2)
v4; v5; v6; v7
nums <- sample(1:100, 10)
sort(nums)
sort(nums, decreasing = T)
print(nums > 50)
print(nums <= 50)
which.max(nums)
which.min(nums)
nums <- sample(1:100, 10)
sort(nums)
sort(nums, decreasing = T)
nums[nums > 50]
nums[nums <= 50]
which.max(nums)
which.min(nums)
v8 <- seq(1, 10, 3)
names(v8) <- LETTERS[1:4]
v8
score <- sample(1:20, 5)
myFriend <- c("둘리", "또치", "도우너", "희동", "듀크")
paste(score, myFriend, sep=" ")
max(paste(score, myFriend, sep=" "))
min(paste(score, myFriend, sep=" "))
myFriend[paste(score, myFriend, sep=" ") > 10)]
score <- sample(1:20, 5)
myFriend <- c("둘리", "또치", "도우너", "희동", "듀크")
paste(score, myFriend, sep=" ")
max(paste(score, myFriend, sep=" "))
min(paste(score, myFriend, sep=" "))
myFriend[paste(score, myFriend, sep=" ") > 10]
count <- sample(1:100, 7)
week.korname <- c("일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일")
paste(week.korname, count, sep=" : ")
max(paste(week.korname, count, sep=" : "))
min(paste(week.korname, count, sep=" : "))
week.korname[paste(week.korname, count, sep=" : ") >50]
count <- sample(1:100, 7)
week.korname <- c("일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일")
print(week.korname[whick.max(count)])
print(week.korname[whick.min(count)])
print(week.korname[whick.max(count>50)])
count <- sample(1:100, 7)
week.korname <- c("일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일")
print(week.korname[which.max(count)])
print(week.korname[which.min(count)])
print(week.korname[which.max(count>50)])
count <- sample(1:100, 7)
week.korname <- c("일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일")
paste(week.korname, count, sep=":")
print(week.korname[which.max(count)])
print(week.korname[which.min(count)])
print(week.korname[which.max(count>50)])
v9 <- sample(1:30, 10, replace = T)
v10 <- v9
names(v10) <- letters[26:17]
v9; v10
v9 <- sample(1:30, 10, replace=T)
v10 <- v9
names(v10) <- letters[26:17]
print(v9)
print(v10)
v <- seq(10:38, 2)
v <- seq(10, 38, 2)
m1 <- matrix(data=v, nrow=5, ncol=3)
m1
m1 <- matrix(data=v, nrow=3, ncol=5)
m1
m2 <- m1 + 100
m2
n1 <- 1:3
n2 <- 4:6
n3 <- 7:9
m3 <- cbind(n1, n2, n3)
m3
m2_1 <- cbind(n1, n2, n3)
m2_1
m3 <- matrix(1:9, nrow=3, ncol=3)
m3
m3 <- matrix(1:9, nrow=3, ncol=3, byrow=T)
m3 <- matrix(1:9, nrow=3, ncol=3, byrow=T)
m3
m4 <- m3
colnames(m4) <- c("col1", "col2", "col3")
rownames(m4) <- c("row1", "row2", "row3")
m4
alpha <- matrix(letters(1:6), nrow = 2, ncol = 3)
alpha
alpha <- matrix(letters[1:6], nrow = 2, ncol = 3)
alpha
alpha2 <- rbind(alpha, c('x', 'y', 'z'))
alpha2
alpha3 <- cbind(alpha, c('s', 'p'))
alpha3
a <- data.frame(1:24, dim=c(2, 3, 4))
a
a[2, , ]
a[, 1, ]
a[, , 3]
a + 100
a[, , 4] * 100
a[1, 2:3, ]
a[2, , 2] <- a[2, , 2] + 100
a[ , , 1] <- a[ , , 1] - 2
a <- a * 10
rm(a); a
a[1, 2:3,]
a[1, 2:3, ]
a <- data.frame(1:24, dim=c(2, 3, 4))
a
a <- array(1:24, dim=c(2, 3, 4))
a
a[2, , ]
a[, 1, ]
a[, , 3]
a + 100
a[, , 4] * 100
a[1, 2:3, ]
a[2, , 2] <- a[2, , 2] + 100
a[ , , 1] <- a[ , , 1] - 2
a <- a * 10
rm(a); a
df1 <- matrix(1:10, nrow=5, ncol=2, byrow=T)
df1
x <- 1:5
y <- seq(2, 10, 2)
df1 <- data.frame(x,y)
df1
col1 <- 1:5
col2 <- letters[1:5]
col3 <- 6:10
df2 <- data.frame(col1, col2, col3)
df2
df3 <- data.frame(
"제품명" = c("사과", "딸기", "수박"),
"가격" = c(1800, 1500, 3000),
"판매량" = c(24, 38, 13)
)
df3
mean(df3$가격)
mean(df3$판매량)
name <- c("Potter", "Elsa", "Gates", "Wendy", "Ben")
gender <- factor(c("M", "F", "M", "F", "M"))
math <- c(85, 76, 99, 88, 40)
df4 <- data.frame(name, gender, math)
df4
df4$star <- c(76, 73, 95, 82, 35)
df4$score <- df4$math + df4$star
df4$grade <- ifelse(df4$score>=150, "A",
ifelse(df4$score>=100, "B",
ifelse(df4$score>=70, "C", "D")))
df4
setwd("~/Self-Review/Rprogram/data폴더")
myemp <- read.csv("emp.csv")
str(myemp)
myemp
myemp[-4,]
myemp[,-4]
myemp['ename', 'sal']
myemp[c('ename', 'sal')]
myname[myemp$job == "SALESMAN", c("ename", "sal", "job")]
myemp[myemp$job == "SALESMAN", c("ename", "sal", "job")]
myemp[myemp$sal >= 1000 & myemp$sal <= 3000, c("ename", "sal", "deptno")]
myemp[myemp$job! = "ANALYST", c("ename", "job", "sal")]
myemp[myemp$job != "ANALYST", c("ename", "job", "sal")]
myemp[myemp$job == "SALESMAN" | myemp$job == "ANALYST", c("ename", "job")]
